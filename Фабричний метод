using System;

public abstract class AbstractPhone
{
    public abstract void PlayMusic(string songName);
    public abstract void StopMusic();
}

public class Samson : AbstractPhone
{
    public override void PlayMusic(string songName)
    {
        Console.WriteLine("Playing song " + songName + " from Samson phone");
    }

    public override void StopMusic()
    {
        Console.WriteLine("Song stopped from Samson");
    }
}

public class Nokla : AbstractPhone
{
    public override void PlayMusic(string songName)
    {
        Console.WriteLine("Playing song " + songName + " from Nokla phone");
    }

    public override void StopMusic()
    {
        Console.WriteLine("Song stopped from Nokla phone");
    }
}

public abstract class AbstractPhoneFactory
{
    public abstract AbstractPhone CreateObject();
}

public class CreateFactoryModelSamson : AbstractPhoneFactory
{
    public override AbstractPhone CreateObject()
    {
        return new Samson();
    }
}

public class CreateFactoryModelNokla : AbstractPhoneFactory
{
    public override AbstractPhone CreateObject()
    {
        return new Nokla();
    }
}

public class Client
{
    public AbstractPhoneFactory ClientMethod(string modelNumber)
    {
        switch (modelNumber.ToLower())
        {
            case "nokla":
                Console.WriteLine("You have selected Nokla phone");
                return new CreateFactoryModelNokla();
            case "samson":
                Console.WriteLine("You have selected Samson phone");
                return new CreateFactoryModelSamson();
            default:
                Console.WriteLine("Invalid Input");
                return null;
        }
    }

    static void Main(string[] args)
    {
        Client getClient = new Client();

        while (true)
        {
            Console.Write("Please provide the model 'Nokla' Or 'Samson' : ");
            var mobModel = getClient.ClientMethod(Console.ReadLine());

            if (mobModel != null)
            {
                Console.WriteLine();
                Console.Write("To play music press 1 else 2 to stop music : ");
                char keyDate = Console.ReadKey().KeyChar;
                Console.WriteLine();

                AbstractPhone phone = mobModel.CreateObject();

                if (keyDate == '1')
                    phone.PlayMusic("Sun rahahainatu..");
                else if (keyDate == '2')
                    phone.StopMusic();
                else
                    Console.WriteLine("Invalid Input");
                Console.WriteLine("Антоненко Анна");
                Console.WriteLine($"Дата та час компіляції: {DateTime.Now}");

            }

            Console.WriteLine();
        }
    }
}

Абстрактний клас AbstractPhone:

Оголошує два абстрактні методи: PlayMusic(string songName) та StopMusic(), які повинні бути реалізовані у підкласах.
Конкретні класи телефонів (Samson та Nokla):

Клас Samson та клас Nokla успадковують AbstractPhone і реалізують методи для відтворення та зупинки музики, виводячи відповідні повідомлення в консоль.
Абстрактна фабрика AbstractPhoneFactory:

Оголошує метод CreateObject(), який має створювати екземпляр конкретного телефону (наприклад, Samson чи Nokla).
Конкретні фабрики для телефонів (CreateFactoryModelSamson та CreateFactoryModelNokla):

Клас CreateFactoryModelSamson створює об'єкт класу Samson, а клас CreateFactoryModelNokla створює об'єкт класу Nokla.
Клас Client:

У методі ClientMethod програма запитує користувача про модель телефону (Nokla чи Samson). В залежності від введеного значення вибирається відповідна фабрика для створення об'єкта телефону.
Потім користувач може вибрати, чи хоче він відтворити музику або зупинити її, натискаючи відповідні клавіші:
При натисканні клавіші "1" запускається музика, що відображається в консолі.
При натисканні клавіші "2" музика зупиняється.
Після кожної операції виводиться дата та час компіляції, а також ім'я користувача (у даному випадку, "Антоненко Анна").
Основна програма:

Програма працює в циклі, постійно запитуючи користувача про модель телефону та дії з музикою.
