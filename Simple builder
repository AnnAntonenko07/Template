using System;
using System.Collections.Generic;
using System.Linq;

public class Product
{
    public string Part1 { get; set; }
    public string Part2 { get; set; }
}

interface IBuilder
{
    void BuildPart1();
    void BuildPart2();
    Product Build();
}

class ConcreteBuilder : IBuilder
{
    private Product _product;

    public ConcreteBuilder()
    {
        _product = new Product();
    }

    public void BuildPart1()
    {
        _product.Part1 = "part1";
    }

    public void BuildPart2()
    {
        _product.Part2 = "part2";
    }

    public Product Build()
    {
        return _product;
    }
}

class Director
{
    private IBuilder _builder;

    public Director(IBuilder builder)
    {
        _builder = builder;
        _builder.BuildPart1();
        _builder.BuildPart2();
        Product finishedProduct = _builder.Build();
    }
}

class BlogPostSettings
{
    public string Title { get; set; }
    public string Content { get; set; }
    public string Author { get; set; }
    public DateTime Date { get; set; }
    public IList<string> Categories { get; set; }
    public IList<string> Tags { get; set; }
    public string MetaDescription { get; set; }
    public string MetadataTitle { get; set; }
}

interface IBlogPostBuilder
{
    void AddTitle(string title);
    void AddContent(string body);
    void AddAuthor(string author);
    void AddDate(DateTime date);
    void AddCategory(string category);
    void AddTags(IEnumerable<string> tags);
    void AddMetadataTitle(string title);
    void AddMetadataDescription(string description);
    BlogPostSettings Build();
}

class BlogPostBuilder : IBlogPostBuilder
{
    private BlogPostSettings _blogPostSettings = new BlogPostSettings();

    public BlogPostBuilder()
    {
        _blogPostSettings.Categories = new List<string>();
        _blogPostSettings.Tags = new List<string>();
    }

    public void AddTitle(string title)
    {
        _blogPostSettings.Title = title;
    }

    public void AddContent(string body)
    {
        _blogPostSettings.Content = body;
    }

    public void AddAuthor(string author)
    {
        _blogPostSettings.Author = author;
    }

    public void AddDate(DateTime date)
    {
        _blogPostSettings.Date = date;
    }

    public void AddCategory(string category)
    {
        _blogPostSettings.Categories.Add(category);
    }

    public void AddTags(IEnumerable<string> tags)
    {
        _blogPostSettings.Tags = tags.ToList();
    }

    public void AddMetadataTitle(string title)
    {
        _blogPostSettings.MetadataTitle = title;
    }

    public void AddMetadataDescription(string description)
    {
        _blogPostSettings.MetaDescription = description;
    }

    public BlogPostSettings Build()
    {
        return _blogPostSettings;
    }
}

class BlogPostDirector
{
    public BlogPostDirector()
    {
        var blogPostBuilder = new BlogPostBuilder();
        blogPostBuilder.AddTitle("My First Blog Post");
        blogPostBuilder.AddContent("This is my first blog post");
        blogPostBuilder.AddAuthor("John Doe");
        blogPostBuilder.AddDate(DateTime.Now);
        blogPostBuilder.AddCategory("C#");
        blogPostBuilder.AddCategory("Programming");
        var blogPostSettings = blogPostBuilder.Build();
        Console.WriteLine($"Title: {blogPostSettings.Title}");
        Console.WriteLine($"Content: {blogPostSettings.Content}");
        Console.WriteLine($"Author: {blogPostSettings.Author}");
        Console.WriteLine($"Date: {blogPostSettings.Date}");
        Console.WriteLine($"Categories: {string.Join(", ", blogPostSettings.Categories)}");
    }
}

class Program
{
    static void Main(string[] args)
    {
        IBuilder builder = new ConcreteBuilder();
        Director director = new Director(builder);
        BlogPostDirector blogPostDirector = new BlogPostDirector();
        Console.WriteLine("Антоненко Анна");
        Console.WriteLine($"Дата та час компіляції: {DateTime.Now}");
        Console.ReadLine();
    }
}



