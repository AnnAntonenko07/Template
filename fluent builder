using System;
using System.Collections.Generic;
using System.Linq;
public class Product
{
    public string Part1 { get; set; }
    public string Part2 { get; set; }
}
interface IBuilder
{
    void BuildPart1();
    void BuildPart2();
    Product Build();
}
class ConcreteBuilder : IBuilder
{
    private Product _product;
    public ConcreteBuilder()
    {
        _product = new Product();
    }
    public void BuildPart1()
    {
        _product.Part1 = "part1";
    }
    public void BuildPart2()
    {
        _product.Part2 = "part2";
    }
    public Product Build()
    {
        return _product;
    }
}
class Director
{
    private IBuilder _builder;
    public Director(IBuilder builder)
    {
        _builder = builder;
        _builder.BuildPart1();
        _builder.BuildPart2();
        Product finishedProduct = _builder.Build();
    }
}
class BlogPostSettings
{ public string Title { get; set; }
    public string Content { get; set; }
    public string Author { get; set; }
    public DateTime Date { get; set; }
    public IList<string> Categories { get; set; }
    public IList<string> Tags { get; set; }
    public string MetaDescription { get; set; }
    public string MetadataTitle { get; set; }
}
class FluentBlogPostBuilder
{
    private readonly BlogPostSettings _blogPostSettings = new BlogPostSettings();
    public FluentBlogPostBuilder()
    {
        _blogPostSettings.Categories = new List<string>();
        _blogPostSettings.Tags = new List<string>();
    }
    public FluentBlogPostBuilder WithTitle(string title)
    {
        _blogPostSettings.Title = title;
        return this;
    }
    public FluentBlogPostBuilder WithContent(string body)
    {
        _blogPostSettings.Content = body;
        return this;
    }
    public FluentBlogPostBuilder WithAuthor(string author)
    {
        _blogPostSettings.Author = author;
        return this;
    }
    public FluentBlogPostBuilder WithDate(DateTime date)
    {
        _blogPostSettings.Date = date;
        return this;
    }
    public FluentBlogPostBuilder WithCategory(string category)
    {
        _blogPostSettings.Categories.Add(category);
        return this;
    }
    public FluentBlogPostBuilder WithTags(IEnumerable<string> tags)
    {
        _blogPostSettings.Tags = tags.ToList();
        return this;
    }
    public FluentBlogPostBuilder WithMetadataTitle(string title)
    {
        _blogPostSettings.MetadataTitle = title;
        return this;
    }
    public FluentBlogPostBuilder WithMetadataDescription(string description)
    {
        _blogPostSettings.MetaDescription = description;
        return this;
    }


    public BlogPostSettings Build()
    {
        return _blogPostSettings;
    }
}
class BlogPostDirector
{
    public BlogPostDirector()
    {
        var blogPostBuilder = new FluentBlogPostBuilder();
        var blogPost = blogPostBuilder
            .WithTitle("My First Blog Post")
            .WithContent("This is my first blog post")
            .WithAuthor("John Doe")
            .WithDate(DateTime.Now)
            .WithCategory("C#")
            .WithCategory("Programming")
            .WithTags(new List<string> { "blog", "software" })
            .WithMetadataDescription("This is my first blog post")
            .WithMetadataTitle("Read why my first blog post is super important")
            .Build();
        Console.WriteLine($"Title: {blogPost.Title}");
        Console.WriteLine($"Content: {blogPost.Content}");
        Console.WriteLine($"Author: {blogPost.Author}");
        Console.WriteLine($"Date: {blogPost.Date}");
        Console.WriteLine($"Categories: {string.Join(", ", blogPost.Categories)}");
        Console.WriteLine($"Tags: {string.Join(", ", blogPost.Tags)}");
        Console.WriteLine($"Metadata Title: {blogPost.MetadataTitle}");
        Console.WriteLine($"Meta Description: {blogPost.MetaDescription}");
    }
}
class Program
{
    static void Main(string[] args)
    {
        IBuilder builder = new ConcreteBuilder();
        Director director = new Director(builder);
        BlogPostDirector blogPostDirector = new BlogPostDirector();
        Console.WriteLine("Антоненко Анна");
        Console.WriteLine($"Дата та час компіляції: {DateTime.Now}");
        Console.ReadLine();
    }
}
